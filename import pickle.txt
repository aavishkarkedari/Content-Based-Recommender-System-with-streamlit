api key 

8265bd1679663a7ea12ac168da84d2e8




import pickle
import streamlit as st
import pandas as pd
import requests

# Load movie data and similarity scores
movie_list = pickle.load(open('movie_list.pkl', 'rb'))
similarity = pickle.load(open('similarity.pkl', 'rb'))

# Create a DataFrame for movie data
movies = pd.DataFrame(movie_list)

# Function to recommend movies
def recommend(movie):
    movie_index = movies[movies['title'] == movie].index[0]
    distances = similarity[movie_index]
    movies_list = sorted(list(enumerate(distances)), reverse=True, key=lambda x: x[1])[1:11]

    recommended_movies = []
    for i in movies_list:
        recommended_movies.append(movies.iloc[i[0]].title)
    return recommended_movies

# Function to fetch movie poster URL from TMDb API
def get_movie_poster(movie_title):
    base_url = "https://api.themoviedb.org/3/search/movie"
    params = {
        "api_key": "8265bd1679663a7ea12ac168da84d2e8",  # Replace with your TMDb API key
        "query": movie_title,
        "include_adult": False
    }

    response = requests.get(base_url, params=params)
    data = response.json()

    if "results" in data and data["results"]:
        poster_path = data["results"][0]["poster_path"]
        poster_url = f"https://image.tmdb.org/t/p/w185{poster_path}"  # Adjust the size here (w185 for small)
        return poster_url
    else:
        return None

# Streamlit app
st.title('Movie Recommender System')

selected_movie_name = st.selectbox(
    'Select a movie:',
    movies['title'].values)

if st.button('Recommend'):
    recommendations = recommend(selected_movie_name)
    if recommendations:
        st.write('Top 10 Recommended Movies:')
        for i, movie in enumerate(recommendations, start=1):
            poster_url = get_movie_poster(movie)
            if poster_url:
                st.image(poster_url, caption=f"{i}. {movie}", width=185)  # Adjust width as needed
            else:
                st.write(f"{i}. {movie}")
    else:
        st.write("No recommendations found for the selected movie.")

